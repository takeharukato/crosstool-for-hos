#
# 開発環境コンテナイメージの作成と登録
# -*- coding:utf-8 mode: yaml-mode -*-
# Copyright (C) 1998-2022 by Project HOS
# http://sourceforge.jp/projects/hos/
#
# 事前準備
#  1) GitHubの右上のメニューからSettingsを選択
#  2) 左側のメニュー内のDeveloper settingsを選択
#  3) Personal Access Tokensの項目をクリックする
#  4) 右上のGenerate new tokenボタンを押す
#  5) チェックボックスでwrite packages/read packagesだけを選択
#  6) Generate tokenボタンを押す
#  7) 発行されたPATをテキストファイルに保存
#  8) 本リポジトリのSettingsを開く
#  9) 右上のNew secretをクリック
# 10) Secretの作成画面で, NameをCR_PAT(本ファイル内で参照している名前)に設定し,
#     Valueに, 上記で獲得したPATを貼り付けてAdd secretをクリック.
#
name: Build and Publish Container Image for Hyper Operating System developers
on:
  push:
    # mainブランチに, scripts/mkcross-elf.shをpushしたら実行
    branches:
      - main
    paths:
      - 'scripts/mkcross-elf.sh'
      - '.github/workflows/push_container_image.yml'
jobs:
  riscv_image:
    # Ubuntu環境のVMでイメージを構築
    runs-on: ubuntu-latest
    env:
      # CPU
      TARGET_CPUS: "riscv32 riscv64"
      # イメージ名
      IMAGE_NAME: crosstool-for-hos-riscv
    steps:
      # 本リポジトリをチェックアウトする
      - name: checkout
        uses: actions/checkout@v2
      # コンテナイメージを構築するための準備を行う
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # GitHub Container Registryにログインする
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          # コンテナイメージレジストリにGitHub Container Registryを使用
          registry: ghcr.io
          # ユーザ名は本リポジトリのオーナのユーザ名を使用
          username: ${{ github.repository_owner }}
          # 本リポジトリの`CR_PAT`シークレットを使用してログインする
          password: ${{ secrets.CR_PAT }}
      # 環境変数設定
      - name: Environment Variable
        run: |
          echo "TARGET_CPUS=${{ env.TARGET_CPUS }}" >> $GITHUB_ENV
      # コンテナイメージを作成し, GitHub Container Registryに登録する
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          # リポジトリのトップディレクトリにDockerfileがあることを指定
          context: .
          # イメージ構築後にレジストリへの登録を行う
          push: true
          # タグ名を設定する
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
